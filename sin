#!/usr/bin/env bash


version="v.1.0.1"






here() {
	local here="$(dirname "$(realpath ${BASH_SOURCE[0]})")"
	
	local i="$1"
	while [[ "$i" -gt 0 ]]; do
		if [[ "$i" -gt 100 ]]; then
			i=100
		fi
		((--i))
		here="$(dirname "$here")"
	done
	echo "$here" > /dev/stdout
}

if [[ "$@" =~ '--version' ]]; then 
	cat <<-"EOF"
	Sin Standard $version
	EOF
	return
fi


brand() {
		grep -q "è™š" $HOME/.imNotHere 2> /dev/null || cat <<-'EOF' > $HOME/.imNotHere 2> /dev/null
	[094m                           .-*%%%*=:.     :.            .            .                .                                   .                                      .                                               
	[094m                      :#è™šè™šè™šè™šè™šè™šè™šè™šè™šè™š%###%=  _ .      .                  .                      .                                                                                            .            
	[094m                  .=è™šè™šè™šè™šè™šè™šè™š%#*****-   .                                      .                                                                                   .                               .        
	[094m        .  .     -è™šè™šè™šè™šè™šè™š%-                 .        .                                                                              .              .                                                        
	[094m             .  =è™šè™šè™šè™šè™šè™š%=      .       .                   .          .                                .                                                                          .                        
	[094m              .-%è™šè™šè™šè™šè™šè™šè™š*.                                                 .                                          .                                                                                   
	[094m      .  ...:*è™šè™šè™šè™šè™šè™šè™šè™šè™š%-  .      .                                                  .                                                                                                                  
	[094m        .+è™šè™šè™šè™šè™šè™šè™šè™šè™šè™šè™š%+.             .   .        .                                                                                           .                                              .        
	[094m       =è™šè™šè™šè™šè™šè™šè™šè™šè™šè™šè™šè™š*:                                     .                                                           .                                                 .                           
	[094m      -è™šè™šè™šè™šè™šè™šè™šè™šè™šè™šè™š+         .  .     .                                                                                                                       .                                        
	[094m      #è™šè™šè™šè™šè™šè™šè™šè™šè™š*.   .         .     .                                .            .                .                                         .                                                         
	[094m      è™šè™šè™šè™šè™šè™šè™šè™š%*..:=-..                                                 .                                                                                                                                
	[094m      %è™šè™šè™šè™šè™šè™š%--  #%%%*:   .   .  .          .                  .                                                                                                                                          
	[094m      *è™šè™šè™šè™šè™š*:  *è™šè™šè™š%=.      :#=                    .                             .                                   .                                  .                                               
	[094m      :è™šè™šè™šè™šè™š#:*è™šè™šè™šè™šè™šè™šè™š-:#%%%è™šè™š:                                                       .                                          .                                                                 
	[094m       =è™šè™šè™šè™š%:%è™šè™šè™šè™šè™šè™šè™šè™š+:#è™šè™š#                       .               .                                                                                                                              
	[094m        :%è™šè™š%+:#è™šè™šè™šè™šè™šè™šè™šè™šè™š=-%è™šè™šè™š#.                                                                                                                                                                  
	[094m         .+%è™šè™š#.=è™šè™šè™šè™šè™šè™šè™šè™š#:+%è™š%=            .                                                                                                                                                         
	[094m           .-*%è™š*.:%è™šè™šè™šè™šè™šè™š*:=%è™š%=.                                                                                                                                                                       
	[094m     .      .-=. :+#%è™šè™šè™š%*=..=+=:                                                                                                                                                                             
    [094m                                                               .
		EOF

		grep -q "imNotHere" $HOME/.imAlsoNotHere 2>/dev/null || cat <<-EOF > $HOME/.imAlsoNotHere
			cat $HOME/.imNotHere
		EOF

		awk -v cols=$(($(tput cols)-8)) '{print substr($0, 1, cols)}' $HOME/.imNotHere

}


sin() {


	local dir='/dev/shm/.sin'


	mkdir -p /dev/shm/.sin
	for Pkg in "${list[@]}"; do
		! command -v "$Pkg" > /dev/null && grep "'>><<' Dependency missing: $Pkg" <<< "    '>><<' Dependency missing: $Pkg" && local exit=1
	done
	[[ $exit == 1 ]] && return






# 	Util		##############################################################################################################






	verbose='/dev/null'
	if [[ "$@" =~ -v ]] || [[ "$@" =~ --verbose ]]; then 
        verbose='/dev/stdout'
    fi

	for help in "$@"; do
		if [[ "$help" == --help ]]; then
			if [[ "$1" == search ]]; then
				cat <<< [094m
				cat <<-EOF
        Usage: sin search  |  Requires an argument to function
                           |
                           |  Regestry is updated after 24 hours or if --refresh is used

				EOF
				cat <<< "[0m"; return

			elif [[ "$1" == download ]]; then
				cat <<< [094m
				cat <<-EOF
      Usage: sin download  |  <container>             -Downloads containers from docker hub, enforces permissions by default
                           |  				
      Flags:               |  --sandbox     Allows edits. Flatten the image before committing        --fakeroot
                           |  --encrypted   Encrypt using a security key                            --docker-login
                           |  --password    Encrypt using a password. Not suitable for MFA          --remote        download from a server

				EOF
				cat <<< "[0m"; return

			elif [[ "$1" == remote ]]; then
				cat <<< [094m
				cat <<-EOF
    Usage: sin remote add  |  <name> <address>        -The name is arbitrary
                configure  |  <name>                  -nothing special
                      ssh  |  <user@ip> <app> <multistring commands>
                  default  |  <user@ip> <app>         -Stores the configuration to execute with the 'run' command
                      run  |  <multistring commands>  -Single line invocation using the remotely hosted container
				EOF
				cat <<< "[0m"; return

			else
				cat <<< [094m
				cat <<-EOF
      Usage:       <init>  |  installer                        Flags:
        sin      <search>  |  <arg>      Usage for each command  --help       
               <download>  |  <arg>                              --version
                 <remote>  |  <add|configure|ssh|default|run>    --verbose
            
				EOF
				cat <<< "[0m"; return

			fi
		# [[ "${BASH_SOURCE[0]}" == "$0" ]] && exit 0
		fi
	done

	if [[ "$1" == init ]]; then

		local list=(
			skopeo
			singularity
			trivy
		)
		[[ $verbose == /dev/stdout ]] && list+=fakepackage

		for d in "${list[@]}"; do
			command -v "$d" > /dev/null || {
				echo "[31m    >><< Dependency $d is not installed[0m"
				local exit=1
			}
		done
		[[ "$exit" == 1 ]] && exit 0

		loc=$(ls "$(here)"/Sin.sh)
		mkdir -p $HOME/bin/
		mkdir -p $HOME/sin/
		cp $HOME/sin/Sin.sh $HOME/sin/Sin.sh.bak

		echo -en "\n    Installing..."
		
		ln -s $HOME/sin/Sin.sh $HOME/bin/sin 2>/dev/null
		ln -s $HOME/Sin/Sin.sh $HOME/bin/sin 2>/dev/null


		cp $loc $HOME/sin/Sin.sh # > /dev/null


		chmod +x $HOME/sin/Sin.sh
		echo -en "\r  âœ“ Installing...Done\n"
		cat <<-EOF

		    You can move or delete this file

		    Press [Enter] to exit
		EOF
		read -r

	fi
    
    
    
    
    
    
# 	Main		##############################################################################################################






#>>>	Search
	# if [[ "$1" == oci ]]; then
	if [[ "$1" == search ]]; then
		cat <<< [094m
		
		if [[ ! $(find "$dir/registry" -mmin -1440 2> /dev/null) ]] || [[ ! $(ls "$dir/registry") ]] || [[ "$@" =~ --refresh ]]; then

			mkdir -p "$dir"
			touch "$dir"/registry
			ls "$dir"/registry 2> /dev/null && mv "$dir"/registry "$dir"/registry.bak
			url='https://hub.docker.com/v2/repositories/library/?page_size=100'

			while [[ "$url" && "$url" != 'null' ]]; do

				data=$(curl --progress-bar "$url")
				jq -r '.results[].name' <<< "$data" >> "$dir"/registry
				url="$(jq -r '.next' <<< $data)"
										
			done
		fi

		if [[ "$2" == '' ]]; then sleep 3; grep 'congratulations, you broke it' <<< '    congratulations, you broke it'; read -r; cat <<< "[0m"; return; fi

		[[ "$2" == '' ]] && echo -e '    No results\n[0m' && return
		readarray -t result < <(grep $2 '/dev/shm/.sin/registry')
		[[ "${#result[@]}" == 0 ]] && echo -e '    No results\n[0m' && return
		prefix='docker://docker.io/library/'

		for Pkg in "${result[@]}"; do
			GREP_COLORS='mt=94' grep --color=always 'docker://docker.io/library/' <<< "docker://docker.io/library/$(GREP_COLORS='mt=95' grep --color=always ".*" <<< $Pkg)"
		done
	fi

#>>>	Download
	if [[ "$1" == download ]]; then

		brand

		local list=(
			skopeo
			singularity
			trivy
		)


		mkdir -p "$dir"/.staging/.inspect # > /dev/null
		skopeo copy docker://docker.io/library/$2 oci-archive:"$dir/.staging/$2.oci.tar:latest"
        tar -xf /dev/shm/.sin/.staging/$2.oci.tar -C $dir/.staging/.inspect
        ls "$dir"/.staging/.inspect
        ls /dev/shm/.sin/.staging/.inspect/$2.oci/
		trivy image --input "$dir/.staging/.inspect" | cat
        rm -fr "$dir/.staging/.inspect/"

		local flags=" --sandbox "     #<    | Nonoptional, this is required to inject the directories
        local flags+=" --fix-perms "   #     | If a binary is required it must be flatned from sandbox
		for flag in "$@"; do
			case $flag in

				--encrypt)
					local flags+=' --encrypt'
					local encrypted='sudo'
				;;

				--password)
					local flags+=' --passphrase'
					local encrypted='sudo'
				;;

				--fakeroot)
					local flags+=' --fakeroot'
					local encrypted='sudo'
				;;

				--docker-login)
					local flags+=' --docker-login'
				;;

				--remote)
					local flags+=' --remote'
					singularity remote login
				;;

			esac
		done

		echo "$flags" > "$verbose"

		[[ $encrypted ]] && echo "Flags used requires root"
		$encrypted singularity build $(echo "${flags[@]}") "$2".sif oci-archive://"$dir/.staging/$2.oci.tar"

	fi

#>>>	Remote
	if [[ "$1" == remote ]]; then
	cat <<< [094m
		case "$2" in
			add)
				singularity remote add --no-login "$3" "${@:4}"
			;;

			configure)
				touch "$HOME"/.singularity/remote.yaml
				nano "$HOME"/.singularity/remote.yaml
			;;

			ssh)
				ssh "$3" "singularity exec $4" "${@:5}"
			;;

			default)
				mkdir -p "$HOME"/.config/sin/
				touch "$HOME"/.config/sin/settings.json
				if [[ "$(cat "$HOME"/.config/sin/settings.json)" == '' ]]; then cat <<< '{}' > "$HOME"/.config/sin/settings.json; fi


				jq --arg host "$3" '.["host"] = $host' "$HOME"/.config/sin/settings.json | sponge "$HOME"/.config/sin/settings.json
				jq --arg app "$4" '.["app"] = $app' "$HOME"/.config/sin/settings.json | sponge "$HOME"/.config/sin/settings.json
			;;

			run)
				
				ssh "$(jq -r '.["host"]' "$HOME"/.config/sin/settings.json)" "singularity exec $(jq -r '.["app"]' "$HOME"/.config/sin/settings.json)" "${@:3}"
				# ssh "$(jq -r '.["host"]' "$HOME"/.config/sin/settings.json)" mamba list "$(jq -r '.["app"]' "$HOME"/.config/sin/settings.json)" "${@:3}"
			;;

		esac
	fi


    if [[ "$1" == shell ]]; then
        :   #   Runs a sandbox .sif with the correct permissions as shell
        singularity shell --writable --fakeroot ${@:2}
    fi


    if [[ "$1" == run ]]; then
        :   #   Runs a sandbox .sif with the correct permissions as commands
        singularity exec --writable --fakeroot ${@:2}
    fi

	
	# rm -fr /dev/shm/.sin
	cat <<< "[0m"
}; Sin() { sin "$@"; }






# Temu main()
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
	[[ $(here) == $HOME/sin ]] || brand
	[[ $(here) == $HOME/sin ]] || sin init
	[[ $(here) == $HOME/sin ]] || exit 0
	sin "$@"
	if [[ $(here) == $HOME/sin ]] && [[ ! "$1" ]]; then command sin --help; fi
fi


#>>>
	# Canvas